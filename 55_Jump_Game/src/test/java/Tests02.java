import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

public class Tests02 {

    Solution solution;

    @BeforeEach
    void setup(){
        solution = new Solution03();
    }



    @Test
    void test01() {

        int[] intArr = new int[]{
            2,3,1,1,4
        };


        System.out.println(solution.canJump(intArr));



    }

    @Test
    void test02() {

        int[] intArr = new int[]{
                2,0
        };


        System.out.println(solution.canJump(intArr));



    }

    @Test
    void test03() {

        int[] intArr = new int[]{
                0
        };


        System.out.println(solution.canJump(intArr));



    }

    @Test
    void test04() {

        int[] intArr = new int[]{
                15400,90,1093,16409,7512,17108,7983,2785,17630,18211,8828,15849,15581,9158,4130,19299,2129,15296,3516,1562,8391,445,348,6227,4225,19059,16139,19091,14046,12293,19173,17418,15922,345,18603,8691,9755,11401,12316,8378,8270,14473,15662,15610,13318,15349,2808,3796,13556,15341,17363,12409,14029,15205,14470,2690,59,14490,9594,13357,7582,9714,4816,4522,9559,5197,16065,35,9069,6205,3824,834,14111,13954,7625,3760,3643,7999,18375,11013,9368,11422,11589,7310,9855,18999,19524,11763,19316,2984,10923,12308,369,7082,5001,5247,11703,11223,19079,3691,17819,14909,2853,2337,11458,1349,11152,4439,15457,13421,14840,12855,765,11031,153,10698,4908,8299,16701,10808,7459,13041,7179,5798,11942,19425,18636,17090,12747,18168,2605,827,3962,10271,11684,10513,12160,7567,17996,5533,3795,16347,16020,17292,2220,7706,18713,13105,10294,10200,11522,2245,6880,12192,14081,14273,3428,2589,8846,15422,1449,5363,15221,7846,1043,15997,2520,10439,2882,2652,17999,13301,7170,829,3133,7223,79,1443,19581,16908,1984,19226,18830,13382,2248,13546,6566,13425,1265,12732,14584,5362,681,19528,19254,8649,6241,18965,7989,6388,19226,7439,4086,19506,3304,6071,7615,1089,12500,18219,9573,10063,16362,3120,4502,5001,2738,12407,2624,6823,2784,13002,19194,6369,890,18170,1476,9574,3262,5253,538,18613,19888,17431,14482,13260,3209,19036,18794,13038,9219,3254,15621,10237,4011,2442,379,9007,14125,16596,12199,1640,11402,1487,16610,8645,9624,3344,509,6896,2210,11074,3180,15039,6968,19793,2633,19714,11922,6616,13251,16894,16354,5641,709,10344,8367,9058,15124,9218,2973,7769,12771,14013,10003,13038,4093,16679,14488,7337,13895,13544,2162,12916,13444,18259,12182,15505,17243,14206,19379,16034,14512,12051,3493,2410,10316,16714,4486,9563,11027,2483,3621,15989,19126,7800,16570,13075,16094,11605,10413,8427,17760,10081,13043,16108,6281,19939,19689,14981,11545,7573,16112,12577,18742,12796,14600,15039,16734,5814,14835,18733,8865,15234,8904,16747,514,16716,12685,19763,12256,11866,12823,1491,13484,19340,11751,2815,15435,18292,2838,8611,14055,8173,6424,7641,9188,10485,747,15433,4394,14808,12239,14128,7117,9960,9974,16092,19210,12547,10355,13721,15266,1682,531,7106,11093,13285,15268,15935,16517,1411,10538,6434,3195,4863,4905,8259,2217,11533,19482,11137,8188,19366,12479,8345,317,4572,10156,676,16397,2979,3996,18029,18402,9028,519,3004,13746,21,14088,17978,14393,4943,2911,17148,2793,18931,891,97,13185,9401,18678,14202,7721,17845,4310,17751,7230,5266,9847,4652,8021,9071,19384,16160,3872,10886,7022,2591,19853,18877,1240,12830,1010,10865,2472,718,18383,15668,10857,2130,16503,730,7903,1958,1527,12305,8702,12714,18413,17796,18887,1892,9342,1933,5428,16033,11697,10679,1601,2055,10066,4005,14972,14190,7319,12898,17616,11744,847,7937,17355,18376,10125,10463,9449,17485,14104,19532,15439,2046,5774,12645,18509,2204,1390,1665,10095,324,4062,7606,4122,11825,14698,1158,19319,16389,18081,17192,11406,17410,19285,11769,2221,6073,12973,11096,2406,15404,15024,6494,11318,2441,5140,18760,2285,3742,10596,9154,8172,2493,2477,8260,5904,13954,16178,3588,11037,13765,4556,12220,7463,1261,6524,7079,15291,16675,14327,14478,14315,15016,5803,1550,9925,5746,2343,3428,1098,14442,7813,16830,12328,6965,5788,5071,10442,5715,8407,11612,6135,13959,18494,7461,2953,14353,2601,2750,17816,1276,360,19830,13420,531,17031,7678,284,10799,7266,4212,14834,18751,3551,2586,18642,8051,19033,2135,13483,500,4056,9650,10170,18781,13344,12809,3692,17135,2823,627,11740,2503,1255,16745,6758,14270,8280,4791,11086,9884,14240,3759,15190,12296,13411,10919,9505,13641,1007,17194,11864,11363,884,1358,17595,32,9285,4094,5519,18735,12387,10414,14653,19251,19288,7229,19868,13753,12109,4746,2534,9443,14738,9731,8639,8737,18687,4570,14444,3060,15899,10087,15106,17874,4486,5559,5902,9124,8244,4219,19999,6102,13517,11347,3834,16979,10889,5106,12600,18782,9494,17916,19069,1315,19691,5783,7481,10418,15774,1021,6308,15843,11150,2300,1120,14749,8617,1643,6781,16216,1762,1068,399,10335,11502,10587,11212,4397,15612,5389,11042,17343,2770,17875,17653,15773,3615,13160,6320,5945,18945,9060,19626,8832,7398,7320,4932,4691,13063,1638,16289,2275,10172,1829,13433,1318,16855,388,9817,449,9612,12076,17694,2330,9055,6443,3754,2777,10592,656,15441,15207,3057,12100,6266,3141,2917,7497,18966,15099,4366,11651,2308,17547,1205,12366,18512,13747,11185,18437,15204,2946,4534,7671,12616,18327,18867,7005,11073,16910,14953,12400,8187,6283,15773,19059,1680,10354,8946,19353,7644,2218,13214,5427,19608,7231,656,9696,4272,10236,2007,7603,5139,4405,5368,15323,12850,4782,7855,18866,347,311,14250,4011,19997,8727,7355,11092,7618,14732,16828,8736,17,9497,17386,11910,17095,15340,2488,1534,8845,12299,2065,18541,3089,12014,10455,15102,13118,18079,7361,11500,11700,1832,19447,8602,1069,6468,4830,9108,2692,4727,3243,17645,15243,17916,6894,15556,10781,679,3405,7176,17772,13420,613,12615,14547,12057,10425,9109,15924,12623,680,3114,10524,10852,12890,8846,6726,16053,6764,6949,13092,649,8094,7624,4226,14937,15950,135,736,50,4905,2949,1138,3930,790,10717,1965,382,15347,6406,1695,5357,5701,13402,6910,6030,835,19958,17005,1132,4055,6522,13906,2540,13636,17937,19429,2538,12615,5789,5718,9115,10984,14649,4651,14461,820,7971,8507,3599,16653,17161,7073,15057,2473,11141,10929,12829,17455,12352,14929,16969,16472,10717,262,9008,4673,13241,11830,10853,10298,3479,3332,19848,4882,18306,138,13927,1635,19555,19354,16928,1372,920,2243,12457,7859,12121,12584,10989,14801,3921,1147,4540,8091,7166,124,6632,12818,3682,4736,4638,15897,8935,7508,7497,9847,18612,1109,12743,10377,14059,10413,16058,12553,907,13553,12255,18937,14476,19455,12702,3588,12016,19690,13188,6776,4297,18071,18266,4813,4311,16112,15335,9795,7382,237,10414,16692,1412,17076,4114,18890,17648,16588,13094,8686,4899,953,6993,8615,3710,7983,16741,3720,18719,2043,7468,3121,15203,3609,19840,4766,19042,19163,17771,760,16431,6573,16534,3739,14678,8854,6916,8570,3470,19903,5257,10203,14724,8565,15837,6768,5904,7465,14032,11648,12263,8630,8590,10109,18584,5033,17867,1933,14054,18102,17292,6768,11052,16572,11635,9455,16722,17045,18069,11107,8116,16744,8977,2820,14868,3791,3862,3641,10586,778,18348,15022,15052,4472,18735,14562,3193,7988,17633,12111,11774,5179,4112,14916,10559,2443,14381,5384,108,5068,13178,11477,2216,15966,12313,7468,2545,9174,14798,3051,16508,12921,13113,4421,12759,3267,845,14585,2060,6601,11328,520,1300,5867,2495,16637,14387,1849,4070,16884,6566,12159,5255,7310,8150,5513,6678,14107,5807,13223,11208,5915,3098,314,17743,10405,36,17083,18289,12793,6177,8552,2134,16193,5621,8424,5166,17977,13720,18606,16408,3760,19260,9765,12744,18095,18330,201,9144,1995,18194,18663,2808,15364,6520,12850,8451,12608,13004,11416,10786,5298,2652,18610,13104,226,16646,18268,8336,14485,8176,4079,12032,4404,16,6966,11170,11184,5191,4447,14557,8741,7498,15140,15791,16586,3810,14325,13894,7336,13454,9595,18542,19802,6602,5686,5906,1133,19926,19983,13445,9078,11798,2490,11225,12737,13340,19415,4093,3782,6698,10846,11857,14851,1923,19514,5857,3159,10335,18007,16289,6403,15688,7871,3458,11160,5912,11048,8558,1441,1425,683,6886,18214,15439,18115,12345,4572,17265,12612,10374,13523,4037,12245,9015,15234,9917,12598,1930,7912,4339,12602,2688,4129,17858,4649,746,13700,476,8915,9890,3559,6263,19164,975,5382,15306,4527,12521,7204,13090,8272,3613,889,11205,17991,715,15721,7437,7773,7140,10545,13222,9612,3467,1881,13482,18934,18707,16300,12175,9149,9330,2558,19325,2139,2219,18454,12947,8442,1236,2694,13550,912,13391,7577,17733,9205,1399,1326,2698,17754,14546,7798,5095,1793,6233,2063,11202,19786,792,2162,17294,3553,12166,4564,998,9921,9402,19146,5254,16666,19708,13457,7579,15711,10749,7225,11347,5997,11440,15655,15851,2183,10987,15570,3420,17734,13180,5216,9639,6608,9634,7115,15133,3543,4852,2003,3886,15719,3251,10122,2996,469,18052,3071,12342,10874,2722,4185,19299,5020,18990,13219,18063,2984,11872,12778,18974,16438,17837,10647,16707,5585,19105,3518,10478,246,5617,7189,14385,11946,5805,12239,5991,19029,7580,11191,2582,2326,9085,13886,10412,19765,18740,262,5388,19526,14946,18749,19901,5694,17972,18060,5042,19568,3586,571,11389,12155,9215,542,3574,9790,13281,9559,17620,10818,2018,15694,5104,18051,8852,3986,5983,13410,9739,1011,3406,13568,721,18009,12857,2907,8751,7789,9577,1026,5584,6541,4936,14611,10628,6395,2634,16515,10767,6367,7807,3826,9080,12317,7983,3953,16538,5221,16350,1073,6167,18922,19406,13336,18506,19256,8656,9011,13859,5213,11500,426,5082,16227,12488,14481,4131,6350,5797,5291,2621,2618,1264,10857,3464,10820,16014,2646,17149,10438,11237,12335,4774,18503,5099,1151,19195,15926,1987,11613,10587,10132,482,14965,3389,754,19269,1087,19460,3052,1986,5196,3351,9200,6889,11523,11524,17716,10003,18907,12867,8513,1424,13489,2753,18934,1372,18363,1438,10270,4551,63,18528,19486,13166,8284,10229,7562,3334,19370,2812,1713,7887,16910,9203,3394,5125,6704,3211,279,11679,7417,6810,19208,11620,19178,12505,674,3090,13775,19431,11844,13554,16381,19107,17147,10856,17713,3637,1262,8035,5895,17764,14520,3577,12301,6823,14363,11320,13103,5355,10232,14283,552,18417,18577,5074,2470,15819,11106,7487,11352,5928,2924,7652,11530,11256,11092,3371,6459,15688,4372,7605,16062,7309,8364,7913,3464,8124,11238,6742,9740,2386,11194,6475,19593,9516,17036,6494,11041,9125,7146,7736,3406,4564,16428,9193,1745,13147,5043,14056,18952,2781,16876,10888,5410,6324,5745,8441,14129,14711,12830,17930,16572,6099,15912,17932,2581,7562,9560,3418,5983,11086,19269,21,14909,16776,15217,5206,1658,17397,17154,13605,10910,16832,7817,18805,5858,7788,15328,11236,15398,12771,13552,16891,16826,6916,8257,7840,9404,11665,11241,10949,13782,14511,16499,6339,2095,617,17352,16024,16779,12294,3855,10258,18140,15792,17270,16750,5998,13345,10486,16142,16326,18666,19165,17652,12188,18612,3783,432,15909,15026,9870,19356,11963,9569,13887,8795,8883,11207,9486,5855,7491,7344,11450,10922,14364,9686,16528,10884,2782,3210,3104,9397,13396,11659,8739,200,4552,13352,7921,4559,19320,16051,3468,13899,9337,8673,15186,18390,4906,14118,11374,17382,5454,4786,9179,6209,13404,13886,6760,5829,8037,18672,15693,2758,13075,5917,10952,8450,17153,7048,2244,16204,2608,19630,13957,5848,18597,739,7275,13186,11717,10445,13304,10590,1812,15793,7674,13292,326,15098,14468,19596,16264,8605,18009,8420,17557,18760,11576,3125,12573,11984,222,15295,11814,2123,17439,5528,6684,13888,3196,1315,14533,15204,15393,6844,19552,6283,18367,17831,7363,5668,11808,17528,1773,19897,13170,17753,540,5645,15558,16529,5129,1522,2560,18386,8494,19612,5664,1319,6042,13375,13629,19417,10083,11076,13174,830,4191,10709,2203,16295,11965,10526,5055,19062,2660,17825,12624,16365,7490,18661,6540,17503,5721,15812,14013,8474,8274,13380,5947,8732,2769,14476,8885,2873,10367,3048,13335,7347,2163,12197,12266,16458,15383,2865,381,2811,7262,8701,15111,10089,1705,16407,5792,7056,19867,388,7545,3024,16814,17611,6276,16596,7473,858,3428,9580,12829,17291,11998,3091,8438,9660,19826,7651,6622,7129,18873,17119,372,17701,6763,19604,8418,113,6746,12017,9724,3910,5760,1171,3435,18390,11954,12160,11677,16995,386,10565,15022,10236,15159,19366,10004,17252,11312,10467,2642,16958,325,19841,17945,6706,13233,17503,8273,11837,8171,6146,13058,14252,1510,6916,15803,8468,13737,2909,18100,6838,9454,4299,12033,17810,13103,3364,18626,2212,2423,1130,1455,7321,18360,10408,6550,15836,6398,3326,2082,10022,9251,18667,16862,18731,16251,1113,7962,15476,6579,12977,2652,13557,14922,5762,18846,9409
        };


        System.out.println(solution.canJump(intArr));



    }

    @Test
    void test05() {


        String[] strArr= PropertiesUtil.getPropery("testArr").split(",");

//        String[] strArr = PropertiesUtil.getPropery("testArr").split(", ");
        int arrLength = strArr.length;
        int[] intArr = new int[arrLength];
        for(int i = 0; i < arrLength; i++){
            intArr[i] = Integer.parseInt(strArr[i]);
//            System.out.printf("strArr[%s]: \'%s\'\tintArr[%s]: \'%s\'\n", i, strArr[i],i, intArr[i]);
        }


        System.out.println(intArr[2336]);
        System.out.println(solution.canJump(intArr));



    }

    @Test
    void test06() {

        int[] intArr = new int[]{
              1,1,1,0   };


        System.out.println(solution.canJump(intArr));



    }

    @Test
    void test07() {

        int[] intArr = new int[]{
                5,1,4,5,2,2,4,4,6,8,8,6,3,5,8,4,6,5,3,4,7,2,4,2,6,7,2,8,3,7,5,6,3,6,6,1,5,2,5,7,8,5,7,7,8,6,1,3,3,5,8,3,2,6,1,5,6,2,8,4,3,4,7,5,5,5,1,8,5,1,6,2,1,2,4,2,3,4,4,7,6,5,6,6,3,3,7,2,5,3,3,4,8,5,7,3,3,7,1,6,3,1,1,8,4,7,5,6,4,1,5,5,5,8,3,1,5,2,2,1,1,7,2,2,5,1,8,2,1,2,1,4,6,7,7,1,2,7,4,3,8,7,2,1,3,7,6,2,4,2,6,6,7,1,1,6,5,1,2,2,4,5,3,6,1,4,7,6,2,6,8,2,8,4,6,5,1,8,2,7,2,5,8,2,5,4,1,8,8,8,7,3,2,6,1,2,7,5,6,4,7,6,2,8,5,1,1,7,6,6,2,1,5,8,2,3,3,2,2,3,6,8,4,5,3,8,6,6,6,8,6,6,6,1,6,1,8,3,1,4,2,6,1,5,5,3,2,3,2,2,4,2,5,8,4,3,4,7,4,2,3,6,7,7,3,3,8,1,4,5,7,6,3,5,4,2,1,6,3,2,1,3,3,7,4,2,7,7,8,6,3,1,3,5,7,2,7,6,8,3,7,1,3,1,8,8,8,1,6,5,3,3,6,2,3,5,8,6,3,5,4,3,6,3,2,6,3,7,3,4,2,5,7,4,8,3,1,5,7,2,3,5,3,4,7,5,4,4,6,1,8,6,6,4,4,7,8,3,6,8,2,5,8,8,1,2,4,5,3,6,6,2,3,2,7,4,5,3,6,2,7,6,3,1,2,3,7,4,1,4,1,5,4,2,2,1,7,3,1,1,3,8,7,7,4,4,2,5,6,5,8,5,7,1,1,3,5,4,4,3,4,1,4,2,1,1,4,8,2,8,3,1,6,5,8,3,3,2,3,6,1,5,4,4,3,5,5,2,1,7,2,5,4,1,2,1,3,8,8,2,1,2,8,2,3,8,2,7,1,4,7,3,4,8,4,8,4,2,7,3,8,8,1,8,5,7,2,7,8,3,6,6,1,1,8,7,3,4,7,1,5,4,5,5,2,3,6,1,8,6,6,3,1,7,2,4,4,4,7,4,7,1,4,1,1,5,2,2,3,2,4,6,2,1,2,8,6,3,1,1,8,3,5,1,3,1,3,8,4,1,6,1,6,4,5,3,2,2,4,4,7,2,1,2,4,6,8,8,3,1,6,2,5,1,7,5,8,1,5,1,3,5,4,8,6,2,1,3,1,2,6,5,5,1,1,6,7,1,5,5,7,3,2,8,8,1,8,2,8,8,5,5,1,4,8,4,7,7,4,8,7,2,8,3,7,5,4,1,2,7,3,6,8,7,4,5,5,8,2,6,3,3,8,7,7,8,3,4,1,3,1,8,1,4,1,2,1,4,4,7,1,4,7,8,3,1,8,6,2,8,8,1,8,6,7,4,7,3,2,6,3,2,3,1,6,3,1,4,1,1,4,2,8,8,2,6,4,4,3,2,2,5,6,5,4,4,2,3,6,1,2,5,5,8,5,1,7,7,3,3,4,6,6,1,8,8,2,7,2,8,2,2,6,7,7,8,6,2,5,2,4,1,7,5,6,3,1,5,7,4,2,5,8,5,1,7,1,2,4,7,2,8,8,1,6,4,6,7,3,1,1,1,1,8,6,5,1,1,5,5,2,4,6,2,1,4,5,5,2,8,6,6,4,8,7,5,1,5,5,6,5,1,8,1,3,7,7,4,8,5,7,1,6,2,4,8,7,3,8,3,8,7,8,3,2,5,5,7,3,5,6,1,8,2,6,5,1,2,2,8,7,4,7,4,6,5,4,5,4,2,2,7,1,8,5,6,6,1,3,1,4,4,7,1,5,6,4,2,4,1,6,1,2,7,5,1,2,4,6,5,3,5,8,5,2,5,2,6,8,3,1,6,8,2,2,5,2,7,6,7,2,4,8,6,4,3,6,6,6,7,2,4,2,4,5,8,7,6,8,6,7,2,2,1,4,6,4,1,7,2,4,2,7,6,8,5,3,5,5,1,5,1,2,5,7,5,5,4,3,6,4,3,6,4,4,2,4,3,7,8,6,4,3,5,4,7,7,5,3,8,3,1,7,1,8,1,8,4,4,2,1,8,4,8,8,2,6,8,8,6,3,7,8,8,5,5,4,3,2,3,2,3,5,3,3,4,4,7,8,4,8,4,1,2,2,3,5,6,6,1,7,5,4,7,5,7,6,6,2,6,2,5,8,1,2,6,1,4,2,5,3,3,2,5,2,7,6,4,7,2,3,8,7,7,4,5,8,5,1,7,5,7,4,7,4,7,8,4,4,6,5,2,6,4,2,6,8,1,8,7,7,8,1,1,8,6,8,4,1,7,5,8,1,2,6,8,6,7,6,5,4,3,1,5,3,6,5,1,7,5,6,3,7,4,1,5,1,4,8,3,5,2,2,3,5,8,2,7,6,4,1,1,4,3,8,1,4,2,7,1,5,4,1,2,2,7,4,6,3,6,5,1,7,6,1,5,3,6,1,7,6,3,8,6,3,8,8,7,6,2,6,5,4,4,4,5,7,5,5,7,5,8,7,3,3,1,4,8,4,5,5,8,4,3,2,7,4,1,3,2,5,5,5,2,7,8,8,7,2,1,2,5,8,1,3,1,4,8,2,4,3,8,5,5,3,7,4,8,7,6,4,8,5,2,7,7,5,3,6,8,5,8,6,8,1,1,6,7,2,4,8,1,4,3,1,4,1,4,2,8,6,6,2,4,8,8,3,7,1,2,6,5,5,5,1,5,2,5,5,4,4,4,8,8,8,7,2,6,4,2,1,2,3,7,5,6,3,6,1,6,7,8,7,1,2,3,6,6,1,4,1,7,4,1,4,7,4,8,8,3,3,7,2,2,6,5,6,2,3,3,2,5,5,2,1,8,2,5,7,8,5,2,2,4,5,8,8,5,2,7,5,7,4,3,5,2,7,7,1,2,3,3,7,5,4,1,2,2,2,7,5,1,5,1,3,6,3,5,7,5,5,3,2,8,8,7,6,6,1,2,1,5,5,4,4,4,6,3,5,4,4,8,8,3,4,3,1,3,7,1,3,7,1,6,2,7,6,5,4,3,4,3,2,7,2,1,6,3,5,7,8,4,6,6,3,5,8,8,3,3,6,5,2,6,4,5,4,6,1,3,4,2,8,4,6,1,2,2,1,6,1,5,5,8,8,6,1,3,7,6,6,6,8,8,2,8,1,4,8,8,4,8,7,6,2,6,4,3,6,1,5,2,8,5,7,7,3,3,5,6,2,6,6,1,3,7,1,5,8,6,6,4,2,2,1,1,8,6,6,6,6,1,5,7,7,8,3,7,4,7,1,1,4,3,6,7,3,5,1,1,2,6,6,7,2,5,1,4,2,3,1,6,4,2,3,6,5,1,7,3,1,2,8,6,1,6,3,2,1,8,2,8,2,2,3,7,6,2,3,7,2,1,7,6,6,5,7,5,8,3,5,1,5,5,7,2,4,6,3,4,4,3,2,6,3,8,4,4,7,6,3,8,3,6,6,4,3,4,2,2,4,6,8,7,1,4,5,1,6,1,5,4,4,5,8,7,8,5,6,7,1,3,3,4,2,4,8,5,5,7,8,7,2,4,8,4,3,8,7,1,2,5,7,4,4,8,1,4,1,4,1,7,4,5,8,8,3,4,6,1,4,3,1,2,5,1,5,5,5,2,8,5,6,2,5,7,1,8,4,3,6,3,1,2,4,1,6,4,7,8,2,4,2,1,5,2,8,4,3,4,1,5,8,4,8,8,8,5,4,2,3,2,2,1,3,4,1,6,1,1,2,1,1,1,2,3,2,7,7,4,4,6,1,5,6,1,5,1,7,5,6,5,8,7,7,2,4,8,2,3,1,5,7,7,2,5,8,2,1,7,6,5,5,1,4,7,7,3,4,2,8,1,7,8,6,5,2,7,5,4,6,5,7,4,1,2,5,7,6,5,8,1,2,1,3,1,5,6,8,5,5,6,7,6,2,6,7,3,4,5,3,3,8,3,1,7,4,7,5,1,6,4,2,8,5,8,2,3,1,2,5,2,5,3,3,1,8,8,5,6,1,3,2,1,6,5,4,3,5,1,5,3,6,3,6,2,5,4,7,6,8,8,8,2,2,3,5,7,2,7,1,6,5,8,7,8,8,2,5,6,4,6,3,5,1,2,2,2,5,5,6,4,8,6,7,1,2,4,3,4,2,3,3,4,5,3,7,1,7,7,5,4,2,5,8,3,5,2,6,7,1,1,5,8,4,3,6,1,6,3,7,2,4,2,4,1,5,5,2,2,7,4,5,1,5,7,4,3,5,6,6,7,1,3,8,2,8,7,3,6,3,6,7,2,2,3,1,5,7,6,5,3,6,6,2,4,6,5,2,8,2,2,6,7,8,1,7,7,3,7,1,4,8,7,4,8,5,6,5,8,4,8,7,6,1,4,6,4,7,6,3,6,3,4,3,3,2,7,5,2,2,2,8,3,7,5,2,8,5,2,1,5,6,4,1,8,6,3,6,1,7,1,7,5,3,1,6,4,3,6,3,2,5,5,8,6,5,8,1,6,7,4,5,4,3,2,5,1,8,1,8,5,7,6,7,4,6,5,2,1,8,4,1,3,3,8,3,8,8,3,5,2,8,1,5,1,1,8,1,2,1,4,2,2,2,8,7,1,5,1,5,6,2,4,2,7,6,2,4,7,8,8,4,2,7,3,7,6,8,6,8,6,5,1,1,2,1,4,2,3,8,3,6,4,5,7,6,4,3,4,8,4,1,1,1,6,8,5,2,5,4,3,7,7,2,2,1,4,3,8,3,4,8,3,3,4,7,3,3,7,4,2,6,7,4,8,4,6,3,2,7,4,3,1,7,8,4,1,5,8,3,2,3,5,2,8,3,7,6,6,8,6,4,1,7,4,4,4,5,8,4,7,5,8,2,6,8,6,4,8,7,6,8,8,5,7,4,5,7,2,1,4,8,1,2,2,1,7,3,6,2,6,2,5,3,7,7,4,3,6,2,5,6,3,1,3,1,6,4,3,2,4,5,7,5,5,4,8,3,1,2,7,7,1,3,3,3,2,4,5,6,2,5,1,1,1,7,6,5,2,2,6,6,4,5,6,8,3,5,8,3,8,8,5,1,2,7,6,5,1,8,5,2,5,5,3,5,4,2,8,1,4,6,1,5,1,8,5,7,2,7,7,7,1,7,1,8,8,6,4,2,4,8,8,4,6,4,7,5,3,5,6,3,8,4,4,6,2,7,6,1,4,3,4,8,2,2,4,6,8,7,7,3,3,3,4,8,5,4,4,1,1,7,1,2,1,1,4,5,1,4,8,1,4,4,6,5,5,1,7,2,8,6,1,3,5,4,4,2,3,7,3,4,6,2,4,7,5,5,2,6,1,6,5,1,1,3,6,4,1,3,7,8,3,7,2,1,2,7,6,8,4,2,3,1,4,4,4,6,4,2,5,4,8,2,6,1,5,2,3,2,7,7,7,4,7,7,5,6,8,3,7,4,5,6,2,4,5,4,7,6,3,7,6,8,5,2,7,6,3,7,2,4,5,3,6,8,3,2,1,2,8,5,2,7,4,2,7,2,4,6,4,7,6,2,4,6,1,1,2,2,4,6,4,4,6,5,7,7,5,5,2,6,3,1,5,1,7,7,5,3,1,1,8,1,6,6,3,3,6,5,4,4,3,4,3,2,3,7,5,4,3,7,2,7,2,7,6,7,6,4,5,3,1,7,3,6,2,6,2,1,8,7,4,8,5,7,7,1,6,4,3,8,5,1,1,4,8,3,4,6,8,8,4,4,2,2,3,5,3,4,1,5,4,4,1,5,3,3,2,1,5,7,2,4,8,8,4,2,5,1,6,6,1,3,2,3,4,1,6,7,8,8,2,4,5,7,5,5,1,3,3,1,6,2,6,3,4,4,8,3,1,5,8,4,4,1,4,6,5,6,3,5,1,8,8,3,5,2,1,6,4,6,1,5,4,3,4,4,1,8,6,4,3,8,4,8,3,5,7,1,8,4,7,1,4,4,3,2,3,8,7,3,8,2,4,8,2,8,8,2,1,7,7,1,2,7,8,1,4,7,4,7,2,8,3,2,3,2,2,4,2,4,5,8,5,2,1,5,6,8,2,8,2,6,1,7,1,8,4,1,2,2,8,8,6,3,7,1,6,1,1,4,2,4,3,3,5,6,8,7,3,1,5,8,8,6,4,5,8,1,4,5,5,8,6,7,2,5,6,6,3,6,5,7,7,6,2,1,6,7,8,3,6,1,6,6,7,8,1,7,7,4,7,5,3,4,5,8,3,5,8,8,2,1,3,4,7,3,4,5,3,1,7,6,1,2,2,5,4,3,7,5,7,4,2,7,3,3,5,5,6,7,7,3,6,2,3,7,2,8,4,7,3,6,2,7,4,4,6,4,2,1,2,6,3,2,6,3,7,7,5,8,8,4,8,8,1,8,1,8,5,4,4,2,6,3,7,4,6,1,8,8,3,4,5,2,8,7,1,1,8,5,5,2,7,4,6,4,2,5,5,4,8,4,4,8,4,8,7,1,8,2,4,6,7,4,6,8,6,3,4,6,8,1,1,2,4,8,7,4,5,4,3,5,7,5,5,8,7,6,6,3,3,1,8,5,3,8,8,3,2,4,3,3,2,2,7,2,3,5,5,2,5,7,4,2,1,5,1,5,6,7,7,8,5,8,1,8,3,3,2,1,6,3,6,4,5,2,8,7,2,5,8,3,1,8,1,1,3,3,5,3,5,1,1,7,2,5,4,8,8,2,2,5,3,2,3,6,2,3,2,5,4,5,5,2,2,7,7,5,1,4,6,7,8,1,6,2,6,1,4,2,5,8,3,8,6,4,6,8,1,5,6,7,7,1,8,6,2,5,3,4,3,6,7,4,4,1,4,5,2,8,2,8,6,7,7,5,8,4,6,1,4,3,7,7,6,7,1,8,5,2,6,5,2,3,8,2,7,2,8,6,2,7,7,8,7,2,6,2,8,8,2,2,8,1,2,5,6,1,2,1,7,1,1,4,6,1,6,4,3,7,1,1,4,4,5,7,4,2,4,6,8,8,3,7,3,3,6,6,1,2,5,6,5,1,8,6,1,2,7,8,2,6,4,5,1,2,4,7,5,8,2,4,7,2,4,5,3,1,4,4,4,1,2,4,3,4,6,4,8,2,5,5,4,3,7,1,8,4,6,3,7,7,7,7,2,2,2,5,3,8,4,7,8,6,8,1,4,5,3,6,2,6,1,8,3,8,1,6,5,3,7,6,4,6,7,2,3,5,5,4,4,4,6,4,6,2,1,1,2,7,2,2,3,1,1,2,5,1,5,7,7,3,5,6,3,5,7,1,4,2,6,5,2,3,7,1,5,1,5,4,8,2,5,5,3,1,6,8,7,7,5,2,4,1,8,2,4,4,7,1,8,5,1,7,2,4,2,5,6,5,7,3,1,7,4,2,1,1,7,1,8,1,4,7,6,4,8,5,6,1,8,1,2,4,4,2,4,1,5,4,5,3,7,3,6,6,4,4,1,2,1,5,2,7,6,3,1,1,7,5,8,4,6,4,2,4,3,6,5,5,1,3,5,7,6,6,2,2,2,6,4,7,8,5,3,8,6,5,1,8,1,8,7,3,2,5,7,1,6,7,4,7,1,1,1,4,7,5,5,7,2,7,5,5,2,2,7,8,7,5,5,1,4,8,5,6,4,7,1,5,8,1,5,3,1,7,1,4,1,6,7,3,4,6,7,3,8,3,1,7,8,5,1,3,6,4,1,2,1,8,5,8,1,5,5,7,3,1,8,1,3,7,6,2,3,3,1,1,3,3,8,2,4,3,8,5,4,4,7,7,6,3,7,6,5,2,1,3,6,5,6,4,1,6,5,4,1,4,1,3,4,6,8,6,6,5,8,8,7,4,5,1,4,6,3,4,8,1,6,2,8,7,4,7,2,1,2,1,2,3,6,5,5,7,1,5,5,5,2,2,4,1,1,8,8,4,1,6,7,3,3,7,8,3,3,8,2,7,8,2,5,5,2,1,2,7,1,2,7,7,8,8,2,1,5,1,7,3,6,7,2,4,4,3,7,4,2,6,5,1,3,7,8,8,1,4,3,5,3,6,1,6,5,4,6,3,3,2,2,1,1,7,6,7,7,6,1,8,1,8,1,2,5,5,3,3,2,7,5,4,2,4,7,8,3,6,2,3,4,7,2,6,6,2,2,8,4,5,1,3,3,6,4,2,3,7,4,1,7,7,8,1,3,1,2,4,6,6,8,7,4,1,1,5,6,8,6,5,8,8,4,3,8,5,6,1,5,1,3,8,8,5,8,2,3,4,3,5,2,1,1,1,8,8,7,8,3,4,6,3,6,1,5,8,1,6,7,6,8,1,3,5,5,5,7,5,7,3,5,7,7,8,1,2,5,8,4,3,5,6,8,3,6,8,7,8,3,2,2,5,5,3,5,7,1,5,3,7,7,6,2,1,6,5,4,2,2,6,3,4,7,6,5,5,5,5,6,2,1,7,6,2,8,1,7,7,7,3,1,6,4,1,3,2,2,5,8,6,2,6,4,5,6,8,1,8,1,6,2,5,2,8,5,1,4,5,3,5,7,7,5,4,1,8,7,8,4,1,5,6,6,1,2,1,7,5,1,6,5,4,7,8,2,8,7,1,7,6,2,2,7,7,4,2,8,5,8,7,7,2,1,3,8,6,7,4,1,8,2,6,8,3,1,4,4,8,3,7,5,6,7,7,3,7,2,1,6,3,5,1,7,2,4,7,2,7,4,7,1,7,3,6,8,4,3,3,5,6,3,1,3,5,5,7,4,7,5,2,4,1,5,6,1,7,8,2,3,8,1,6,4,6,5,4,2,7,4,1,4,7,5,5,3,4,6,4,2,5,6,7,1,1,3,7,2,6,3,8,7,7,6,7,2,4,6,4,2,7,8,7,6,7,3,4,5,3,3,4,7,4,6,7,7,3,7,3,4,2,7,5,3,6,8,1,5,3,6,3,6,2,4,2,6,4,4,2,1,3,5,5,5,6,8,7,3,8,4,5,8,8,3,5,1,5,7,5,4,1,6,5,2,4,7,3,7,7,2,7,1,5,2,4,7,3,5,2,2,3,4,1,2,5,1,1,1,7,7,3,7,3,7,6,2,3,6,1,1,6,7,4,7,7,7,3,1,2,4,1,1,7,2,1,6,1,2,2,3,5,8,3,2,6,5,2,5,6,3,5,7,8,8,1,7,7,3,4,7,8,7,6,2,2,7,4,1,6,7,3,2,3,1,4,7,1,8,1,7,1,6,5,6,1,3,2,6,5,6,4,7,3,5,4,4,3,8,5,4,2,1,3,4,6,1,4,6,3,1,5,7,6,4,1,4,3,4,6,7,7,2,3,6,1,2,4,8,7,4,8,2,5,1,6,6,5,5,6,2,5,8,5,6,1,7,3,2,8,8,7,3,7,7,1,1,2,6,1,7,6,6,6,5,8,7,8,5,4,1,7,3,6,6,5,8,7,8,1,7,1,2,8,2,3,7,5,4,3,2,5,2,6,6,5,4,6,8,5,6,4,2,5,3,1,2,6,4,3,5,1,7,7,1,2,6,8,3,6,1,8,5,8,7,6,7,7,3,1,7,4,8,7,6,8,2,1,3,5,7,2,3,2,8,5,7,6,4,6,7,5,8,2,4,6,1,8,1,5,7,2,2,6,7,2,7,5,3,6,6,4,8,5,6,4,1,1,2,3,7,5,8,7,5,1,2,6,8,3,1,8,5,6,8,6,1,7,1,8,2,2,5,3,8,4,2,4,6,6,3,8,6,6,4,6,2,8,6,5,7,6,3,5,4,7,5,2,7,8,1,8,5,2,5,4,7,4,4,4,3,8,4,6,7,1,4,6,3,2,1,7,6,1,5,5,1,1,7,2,1,2,3,5,8,5,8,2,8,5,7,5,8,6,5,3,4,6,2,4,5,2,8,3,8,7,8,4,6,3,1,6,3,6,3,5,5,3,6,3,8,4,6,6,2,5,3,4,6,1,8,6,1,1,7,2,1,7,3,5,4,7,4,2,5,3,6,6,2,4,1,4,7,2,3,4,5,1,6,4,8,4,4,6,3,3,7,1,3,4,8,8,2,5,5,6,8,5,7,5,4,8,7,4,4,7,3,4,1,3,8,6,8,4,7,4,1,7,8,8,7,3,4,3,3,6,1,6,4,5,1,5,5,6,6,2,6,4,5,3,7,5,6,7,3,2,7,2,4,5,8,8,6,2,8,4,3,5,6,2,2,5,3,5,5,3,3,3,4,8,6,3,3,2,2,4,2,8,6,7,3,6,7,3,5,1,7,1,2,5,7,3,7,7,7,8,3,1,5,7,6,0,0,0,0,0,0,0,0  };


        System.out.println(solution.canJump(intArr));



    }

    @Test
    void test08() {

        int[] intArr = new int[]{
                1,0,0,0   };


        System.out.println(solution.canJump(intArr));



    }

    @Test
    void test09() {


        String[] strArr= PropertiesUtil.getPropery("test09").split(",");

//        String[] strArr = PropertiesUtil.getPropery("testArr").split(", ");
        int arrLength = strArr.length;
        int[] intArr = new int[arrLength];
        for(int i = 0; i < arrLength; i++){
            intArr[i] = Integer.parseInt(strArr[i]);
//            System.out.printf("strArr[%s]: \'%s\'\tintArr[%s]: \'%s\'\n", i, strArr[i],i, intArr[i]);
        }


//        System.out.println(intArr[2336]);
        System.out.println(solution.canJump(intArr));



    }

}
